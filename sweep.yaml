program: experiments.sweep_experiment
method: random
project: ResNet18Optimizing
entity: kn-bmi
metric:
  goal: minimize
  name: val_loss
parameters:
  optimizer:
    values: ['adam', 'adamw', 'radam', 'nadam', 'rmsprop', 'sgd']
  
  alpha:
    values: [0.999, 0.99, 0.97, 0.95, 0.9]

  momentum:
    values: [0.99, 0.97, 0.95, 0.9]
  
  centered:
    values: [True, False]

  dampening:
    values: [0.1, 0.01, 0.001, 0.0001]
  
  nesterov:
    values: [True, False]

  lr_scheduler:
    values: ['cosine_lr', 'cosine_warm_lr', 'None']
  
  lr_lambda:
    values: [0.99, 0.95, 0.9]

  t_max:
    values: [10, 15, 20]
  
  t_0:
    values: [4, 6, 8]
  
  t_mul:
    values: [1, 2]
  
  momentum_decay:
    values: [0.01, 0.04, 0.004, 0.001, 0.0001, 0.00001]

  learning_rate:
    values: [1, 1e-1, 1e-2, 1e-3, 1e-4]

  beta:
    values: [0.99, 0.97, 0.95, 0.9]

  weight_decay:
    values: [1e-5, 1e-6, 1e-7, 0]

  amsgrad:
    values: [True, False]

  batch_size:
    values: [16, 32, 64]

  weight_0:
    distribution: normal
    mu: 1
    sigma: 0.1

  weight_1:
    distribution: normal
    mu: 1.5
    sigma: 0.2

  weight_2:
    distribution: normal
    mu: 2.65
    sigma: 0.28

  weight_3:
    distribution: normal
    mu: 2
    sigma: 0.21

command:
  - ${env}
  - PL_TORCH_DISTRIBUTED_BACKEND=gloo
  - poetry
  - run
  - python3
  - -m
  - ${program}
  - ${args}
